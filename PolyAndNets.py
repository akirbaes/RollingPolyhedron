
shapes_names= "j1", "tetrahedron", "cube", "octahedron", "j15", "j16", "j86", "hexagonal_antiprism", "j8", "j10", "j49", "j50", "j87", "j88", "j89", "j90", "j12", "j14", "j17", "j51", "j84"

missing = "icosahedron", "j13"

lcl = locals()
for shape_name in shapes_names+missing:
	lcl[shape_name]=shape_name

nets = dict()
polys = dict()


# Represent the faces of the 3D shape that can be rolled
# Each shape gives its neighbours

polys[j1] = {  # order is clockwise (but unimportant here)
    0: [1, 2, 3, 4],
    1: [2, 0, 4],
    2: [1, 3, 0],
    3: [4, 0, 2],
    4: [3, 1, 0]
}
p=5
# Represents the cases of the 2D net that tiles the space
# The neighbours outside of the net are represented by their ID + k*p (p being bigger than the number of polygons)
# A same outside shape has a same k. For example, for the pyramid, there are 4 different shapes
# A shape that is on one side and on the other is k*p on one side and -k*p on the other side (for easy symmetry)
# The representation is recursive, meaning the ID+k*p part can be further be explored as part of a full net as (ID + k*p-1)%p+1 = ID
# This is a simple representation, but all the tiles that I can see from the document follow this pattern
nets[j1] = {  # order is clockwise
    0: [1, 0 - p, 3, 0 + p],
    1: [2, 0, 2 + p],
    2: [1, 4 + p, 1 - p],
    3: [4, 0, 4 + p],
    4: [3, 2 - p, 3 - p]
}


polys[tetrahedron] = {
    0: [1, 2, 3],
    1: [2, 0, 3],
    2: [0, 1, 3],
    3: [0, 2, 1]
}
p=4
nets[tetrahedron] = {
    0: [1, 2, 3],
    1: [3 - p, 2 - 2 * p, 0],
    2: [0, 1 + 2 * p, 3 - 3 * p],
    3: [0, 2 + 3 * p, 1 + p]
}

polys[cube] = {
    0: [1, 2, 4, 3],
    1: [0, 3, 5, 2],
    2: [0, 1, 5, 4],
    3: [0, 4, 5, 1],
    4: [0, 2, 5, 3],
    5: [1, 3, 4, 2]
}
p=6
nets[cube] = {
    0: [1, 2, 4, 3],
    1: [0, 2 + p, 5, 5 + p],
    2: [0, 5 + p, 1 - p, 3 + p],
    3: [0, 4 + p, 4 + 2 * p, 2 - p],
    4: [0, 3 - 2 * p, 3 - p, 4+p],
    5: [5, 2 - p, 1 - p, 1]
}
# Here, an exception, 5 goes to 5 symmetrically and 6 goes to 6 symmetrically


polys[octahedron] = {
    0: (1, 7, 3),
    1: (0, 2, 6),
    2: (1, 3, 5),
    3: (4, 2, 0),
    4: (5, 3, 7),
    5: (4, 6, 2),
    6: (5, 7, 1),
    7: (6, 4, 0)
}
p=8
nets[octahedron] = {
    0: (1, 7 + p, 1 + p),
    1: (0, 2, 0 - p),
    2: (1, 3, 3 + p),
    3: (4, 2, 2 - p),
    4: (5, 3, 5 + p),
    5: (4, 6, 4 - p),
    6: (5, 7, 7 + p),
    7: (6, 6 - p, 0 - p)
}

polys[j14] = {
    0: (3, 2, 1),
    1: (4, 0, 2),
    2: (5, 1, 0),
    3: (0, 4, 6, 5),
    4: (1, 5, 7, 3),
    5: (8, 4, 2, 3),
    6: (3, 7, 8),
    7: (4, 8, 6),
    8: (5, 6, 7)
}
p=9
nets[j14] = {
    0: (3, 6 + p, 7 + p),
    1: (4, 7 + p, 8 + p),
    2: (5, 8 + p, 6 + p),
    3: (0, 4, 6, 5 + p),
    4: (1, 5, 7, 3),
    5: (8, 4, 2, 3 - p),
    6: (3, 0 - p, 2 - p),
    7: (4, 1 - p, 0 - p),
    8: (5, 2 - p, 1 - p)
}

polys[j15] = {
    0: (3, 9, 1),
    1: (4, 0, 2),
    2: (5, 1, 9),
    3: (0, 4, 6, 10),
    4: (1, 5, 7, 3),
    5: (8, 4, 2, 10),
    6: (3, 7, 11),
    7: (4, 8, 6),
    8: (5, 11, 7),
    9: (10, 2, 0),
    10: (9, 3, 11, 5),
    11: (10, 6, 8)
}
p=12
nets[j15] = {
    0: (3, 6 + p, 7 + p),
    1: (4, 7 + p, 8 + p),
    2: (5, 8 + p, 11 + p),
    3: (0, 4, 6, 10),
    4: (1, 5, 7, 3),
    5: (8, 4, 2, 10 + p),
    6: (3, 0 - p, 9 + p),
    7: (4, 1 - p, 0 - p),
    8: (5, 2 - p, 1 - p),
    9: (10, 11 + p, 6 - p),
    10: (9, 3, 11, 5 - p),
    11: (10, 9 - p, 2 - p)
}

polys[j16] = {
    0: (3, 9, 1),
    1: (4, 0, 2),
    2: (5, 1, 12),
    3: (0, 4, 6, 10),
    4: (1, 5, 7, 3),
    5: (8, 4, 2, 13),
    6: (3, 7, 11),
    7: (4, 8, 6),
    8: (5, 14, 7),
    9: (10, 12, 0),
    10: (9, 3, 11, 13),
    11: (10, 6, 14),
    12: (13, 2, 9),
    13: (14, 5, 12, 10),
    14: (13, 11, 8)
}
p=15
nets[j16] = {
    0: (3, 6 + p, 7 + p),
    1: (4, 7 + p, 8 + p),
    2: (5, 8 + p, 14 + p),
    3: (0, 4, 6, 10),
    4: (1, 5, 7, 3),
    5: (8, 4, 2, 13),
    6: (3, 0 - p, 9 + p),
    7: (4, 1 - p, 0 - p),
    8: (5, 2 - p, 1 - p),
    9: (10, 11 + p, 6 - p),
    10: (9, 3, 11, 13 + p),
    11: (10, 9 - p, 12 + p),
    12: (13, 14 + p, 11 - p),
    13: (14, 5, 12, 10 - p),
    14: (13, 12 - p, 2 - p)
}

polys[j86] = {
    0: (1, 4, 10),
    1: (2, 0, 12),
    2: (1, 3, 4),
    3: (2, 13, 5),
    4: (2, 5, 6, 0),
    5: (7, 4, 3, 9),
    6: (7, 10, 4),
    7: (5, 8, 6),
    8: (7, 9, 11),
    9: (8, 5, 13),
    10: (11, 0, 6),
    11: (10, 8, 12),
    12: (11, 13, 1),
    13: (12, 9, 3)
}
p=14
nets[j86] = { #A
    0: (1, 5 + p, 3 + p),
    1: (2, 0, 10 + p),
    2: (1, 3, 4),
    3: (2, 12 + p, 0 - p),
    4: (2, 5, 9 + p, 5 + p),
    5: (7, 4, 0 - p, 4 - p),
    6: (7, 13 + p, 9 + p),
    7: (5, 8, 6),
    8: (7, 9, 11),
    9: (8, 4 - p, 6 - p),
    10: (11, 1 - p, 13 + p),
    11: (10, 8, 12),
    12: (11, 13, 3 - p),
    13: (12, 6 - p, 10 - p)
}
p=14
nets[j86] = { #B
    0: (1, 5 + p, 3 + p),
    1: (2, 0, 12 + p),
    2: (1, 3, 4),
    3: (2, 10 + p, 0 - p),
    4: (2, 5, 9 + p, 5 + p),
    5: (7, 4, 0 - p, 4 - p),
    6: (7, 13 + p, 9 + p),
    7: (5, 8, 6),
    8: (7, 9, 11),
    9: (8, 4 - p, 6 - p),
    10: (11, 3 - p, 13 + p),
    11: (10, 8, 12),
    12: (11, 13, 1 - p),
    13: (12, 6 - p, 10 - p)
}

polys[hexagonal_antiprism] = {
    0: (1, 8, 3),
    1: (0, 2, 10),
    2: (1, 3, 5, 7, 13, 11),
    3: (2, 0, 4),
    4: (5, 3, 8),
    5: (2, 4, 6),
    6: (5, 8, 7),
    7: (6, 9, 2),
    8: (10, 12, 9, 6, 4, 0),
    9: (8, 13, 7),
    10: (11, 8, 1),
    11: (10, 2, 12),
    12: (13, 8, 11),
    13: (12, 2, 9)
}
p=14
nets[hexagonal_antiprism] = {
    0: (1, 2 + p, 7 + p),
    1: (0, 2, 2 + p),
    2: (1, 3, 5, 0 - p, 2, 1 - p),
    3: (2, 7 + p, 9 + p),
    4: (5, 9 + p, 13 + p),
    5: (2, 4, 6),
    6: (5, 8, 7),
    7: (6, 3 - p, 0 - p),
    8: (10, 12, 9, 6, 13 + p, 10 + p),
    9: (8, 4 - p, 3 - p),
    10: (11, 8, 8 - p),
    11: (10, 12 + p, 11),
    12: (13, 8, 11 - p),
    13: (12, 8 - p, 4 - p)
}

polys[j8] = {
    0: (1, 8, 3),
    1: (0, 2, 7),
    2: (4, 1, 3),
    3: (5, 2, 0),
    4: (2, 5, 6, 7),
    5: (4, 3, 8, 6),
    6: (7, 4, 5, 8),
    7: (6, 8, 1, 4),
    8: (7, 6, 5, 0)
}
p=9
nets[j8] = {
    0: (1, 3 + p, 2 + p),
    1: (0, 2, 3 + p),
    2: (4, 1, 0 - p),
    3: (5, 0 - p, 1 - p),
    4: (2, 5, 6, 5 + p),
    5: (4, 3, 4 - p, 7 + p),
    6: (7, 4, 7 + p, 8 + p),
    7: (6, 8, 6 - p, 5 - p),
    8: (7, 8, 6 - p, 8 + 2 * p)
}



missing = "j10", "j49", "j50", "j87", "j88", "j89", "j90", "icosahedron", "j12", "j13", "j17", "j51", "j84"

polys[j10] = {0: (7, 1, 8),
    8: (0, 9, 11),
    11: (6, 8, 10),
    10: (4, 11, 9),
    4: (3, 5, 10),
    5: (4, 12, 6),
    12: (3, 1, 7, 5),
    3: (2, 12, 4),
    2: (1, 3, 9),
    6: (5, 7, 11),
    9: (2, 10, 8),
    1: (0, 12, 2),
    7: (6, 12, 0)}
p=13#len(polys[j10])
nets[j10]={
    0: [8, 10-2*p, 4-p],
    8: [0, 9, 11],
    11: [6, 8, 5+p],
    10: [9, 0+2*p, 7-p],
    4: [3, 1-p, 0+p],
    5: [6, 11-p, 7+p],
    12: [3, 12, 1+p, 12+p],
    3: [2, 12, 4],
    2: [1, 3, 9],
    6: [5, 7, 11],
    9: [2, 10, 8],
    1: [2, 4+p, 12-p],
    7: [6, 5-p, 10+p]
}

polys[j49] = {0: [3, 6, 1, 5],
    5: [0, 1, 2],
    2: [7, 3, 5],
    7: [1, 4, 2],
    4: [3, 7, 6],
    1: [0, 6, 7, 5],
    6: [0, 4, 1],
    3: [4, 0, 2]}

p=len(polys[j49])

nets[j49] = {0: [1+p, 6+p, 1+2*p, 1],
    5: [6+p, 7+p, 2],
    2: [2+p, 3, 5],
    7: [1, 4, 5+p],
    4: [3, 7, 6],
    1: [0, 0+2*p, 7, 0+p],
    6: [5+p, 4, 0+p],
    3: [4, 3+p, 2]}

polys[j50] = {0: [4, 7, 5, 2],
    2: [1, 0, 3],
    3: [2, 5, 10],
    10: [3, 9, 1],
    9: [6, 10, 8],
    8: [7, 9, 5],
    6: [4, 9, 7],
    1: [4, 2, 10],
    5: [0, 8, 3],
    7: [6, 8, 0],
    4: [0, 1, 6]}

p = len(polys[j50])

nets[j50] = {0: [0-p, 7, 0+p, 2],
    2: [3+p, 0, 3],
    3: [2, 2+p, 10],
    10: [3, 1+p, 1],
    9: [6, 8+p, 8],
    8: [9+p, 9, 5],
    6: [7+p, 9, 7],
    1: [4, 10+p, 10],
    5: [4+2*p, 8, 4+p],
    7: [6, 6+p, 0],
    4: [5+2*p, 1, 5+p]}


#The four rotations of the square 1 gave different results, only one was valable for the net
polys[j87] = {0: [14, 16, 1],
    1: [0, 9, 11, 7],
    7: [6, 1, 10],
    10: [11, 13, 7],
    13: [10, 2, 3],
    3: [5, 6, 13],
    5: [4, 15, 3],
    15: [5, 16, 14],
    4: [2, 8, 5],
    8: [9, 16, 4],
    2: [12, 4, 13],
    12: [11, 9, 2],
    6: [14, 7, 3],
    11: [1, 12, 10],
    9: [8, 12, 1],
    16: [15, 8, 0],
    14: [15, 0, 6]}


p=len(polys[j87])
nets[j87] = {0: [14, 16, 15+p],
    1: [7+p, 1+2*p, 11, 1+p],
    7: [6, 1+p, 10],
    10: [11, 13, 7],
    13: [10, 2, 9+p],
    3: [5, 8+p, 9+p],
    5: [4, 15, 3],
    15: [5, 14+p, 0+p],
    4: [2, 8, 5],
    8: [3+p, 16, 4],
    2: [12, 4, 13],
    12: [6+p, 9, 2],
    6: [11+p, 7, 12+p],
    11: [1, 6+p, 10],
    9: [3+p, 12, 13+p],
    16: [14+p, 8, 0],
    14: [16+p, 0, 15+p]}


polys[j88] = {0: [3, 8, 5, 1],
    1: [6, 0, 7],
    7: [1, 4, 14],
    14: [15, 16, 7],
    16: [17, 6, 14],
    17: [9, 12, 16],
    12: [13, 2, 17],
    2: [3, 6, 12],
    13: [8, 3, 12],
    9: [15, 8, 17],
    15: [10, 9, 14],
    10: [11, 15, 4],
    11: [5, 8, 10],
    4: [5, 10, 7],
    6: [2, 1, 16],
    5: [0, 11, 4],
    8: [11, 0, 13, 9],
    3: [13, 0, 2]}
p=len(polys[j88])

nets[j88] = {0: [3, 8, 5, 8+p],
    1: [6, 1+p, 7+p],
    7: [7+p, 1+p, 14],
    14: [2+p, 16, 7],
    16: [17, 6, 14],
    17: [13+p, 3+p, 16],
    12: [13, 2, 3+p],
    2: [14+p, 6, 12],
    13: [8, 17+p, 12],
    9: [15, 5+p, 11+p],
    15: [10, 9, 15+p],
    10: [10+p, 15, 4],
    11: [9+p, 8, 4+p],
    4: [5, 10, 11+p],
    6: [2, 1, 16],
    5: [0, 9+p, 4],
    8: [11, 0, 13, 0+p],
    3: [17+p, 0, 12+p]}



polys[j89] = {0: [3, 8, 5, 1],
    1: [6, 0, 7],
    7: [1, 4, 17],
    17: [18, 19, 7],
    19: [20, 6, 17],
    20: [12, 15, 19],
    15: [16, 2, 20],
    2: [3, 6, 15],
    16: [11, 10, 15],
    10: [8, 3, 16],
    11: [14, 8, 16, 12],
    14: [9, 11, 13],
    13: [14, 18, 4],
    9: [8, 14, 5],
    12: [18, 11, 20],
    18: [13, 12, 17],
    4: [5, 13, 7],
    6: [2, 1, 19],
    5: [0, 9, 4],
    8: [11, 9, 0, 10],
    3: [10, 0, 2]}
p=len(polys[j89])
nets[j89]={   0: [3, 8, 5, 11+p],
    1: [6, 5+p, 9+p],
    2: [13+p, 6, 15],
    3: [20+p, 0, 15+p],
    4: [5, 13, 14+p],
    5: [0, 1+p, 4],
    6: [2, 1, 19],
    7: [9+p, 14+p, 17],
    8: [11, 9, 0, 10],
    9: [8, 7+p, 1+p],
    10: [8, 20+p, 12+p],
    11: [14, 8, 16, 0+p],
    12: [18, 16+p, 10+p],
    13: [2+p, 18, 4],
    14: [7+p, 11, 4+p],
    15: [16+p, 2, 3+p],
    16: [11, 12+p, 15+p],
    17: [18, 19, 7],
    18: [13, 12, 17],
    19: [20, 6, 17],
    20: [10+p, 3+p, 19]}




polys[j90] = {0: [1, 11, 3],
    3: [4, 0, 7],
    7: [3, 12, 8],
    8: [7, 9, 6],
    6: [8, 17, 4],
    17: [16, 18, 6],
    18: [19, 5, 17],
    5: [4, 18, 2],
    2: [1, 5, 20],
    20: [19, 22, 2],
    22: [23, 21, 20],
    21: [22, 13, 1],
    13: [11, 21, 14],
    14: [13, 23, 10],
    10: [12, 14, 15, 9],
    15: [10, 23, 19, 16],
    23: [14, 22, 15],
    19: [15, 20, 18],
    16: [9, 15, 17],
    9: [8, 10, 16],
    12: [7, 11, 10],
    4: [1, 3, 6, 5],
    11: [0, 13, 12],
    1: [21, 0, 4, 2]}
p=len(polys[j90])
nets[j90]={   0: [1, 11, 3],
    1: [4+p, 0, 4, 2],
    2: [1, 21+p, 20],
    3: [13+p, 0, 7],
    4: [1, 13+p, 1+p, 5],
    5: [4, 20+p, 21+p],
    6: [12+p, 17, 7+p],
    7: [3, 6+p, 8],
    8: [7, 9, 12+p],
    9: [8, 18+p, 16],
    10: [15+p, 14, 15, 18+p],
    11: [0, 13, 12],
    12: [6+p, 11, 8+p],
    13: [11, 4+p, 3+p],
    14: [22+p, 19+p, 10],
    15: [10, 23, 10+p, 16],
    16: [9, 15, 17],
    17: [16, 18, 6],
    18: [10+p, 9+p, 17],
    19: [14+p, 20, 23+p],
    20: [19, 5+p, 2],
    21: [22, 2+p, 5+p],
    22: [23, 21, 14+p],
    23: [19+p, 22, 15]}

polys[icosahedron] = None


polys[j12] = {0: [2, 1, 3],
    3: [4, 5, 0],
    5: [4, 2, 3],
    4: [1, 5, 3],
    1: [2, 4, 0],
    2: [0, 5, 1]}
p=len(polys[j12])
nets[j12]={   0: [3+p, 1, 5+p],
    1: [2, 4, 0],
    2: [5+p, 3+p, 1],
    3: [4, 0+p, 2+p],
    4: [1, 5, 3],
    5: [4, 0+p, 2+p]}

polys[j13] = {0: [6, 1, 3],
    3: [4, 7, 0],
    7: [3, 9, 6],
    9: [5, 8, 7],
    8: [2, 6, 9],
    2: [8, 5, 1],
    5: [4, 2, 9],
    4: [1, 5, 3],
    1: [2, 4, 0],
    6: [0, 7, 8]}
p=len(polys[j13])
nets[j13] = {   0: [6, 1, 3],
    1: [2, 8+p, 0],
    2: [9+p, 5+p, 1],
    3: [4, 7, 0],
    4: [6+p, 5, 3],
    5: [4, 7+p, 2+p],
    6: [0, 4+p, 8],
    7: [3, 9, 5+p],
    8: [9+p, 6, 1+p],
    9: [2+p, 8+p, 7]}

polys[j17] = {0: [7, 1, 8],
    8: [0, 9, 11],
    11: [6, 8, 10],
    10: [4, 11, 9],
    4: [3, 5, 10],
    5: [4, 14, 6],
    14: [5, 13, 15],
    15: [7, 14, 12],
    12: [1, 15, 13],
    13: [3, 12, 14],
    3: [2, 13, 4],
    2: [1, 3, 9],
    6: [5, 7, 11],
    9: [2, 10, 8],
    1: [0, 12, 2],
    7: [6, 15, 0]}
p=len(polys[j17])
nets[j17]={   0: [7, 1, 8],
    1: [0, 12, 2],
    2: [1, 3, 9],
    3: [2, 13, 4],
    4: [3, 11+p, 10],
    5: [13+p, 14, 6],
    6: [5, 7, 11],
    7: [6, 15, 0],
    8: [0, 15+p, 14+p],
    9: [2, 12+p, 15+p],
    10: [4, 13+p, 12+p],
    11: [6, 14+p, 4+p],
    12: [1, 9+p, 10+p],
    13: [3, 10+p, 5+p],
    14: [5, 11+p, 8+p],
    15: [7, 8+p, 9+p]}

polys[j51] = {0: [13, 2, 11],
    11: [10, 12, 0],
    12: [9, 13, 11],
    9: [6, 12, 8],
    8: [7, 9, 10],
    7: [6, 8, 4],
    4: [7, 3, 1],
    1: [4, 2, 5],
    5: [13, 6, 1],
    3: [4, 10, 2],
    6: [5, 9, 7],
    10: [8, 11, 3],
    2: [3, 0, 1],
    13: [12, 5, 0]}
p=len(polys[j51])
nets[j51]={   0: [1+p, 2, 10+p],
    1: [4, 0+p, 5],
    2: [3, 0, 2+p],
    3: [4, 7+p, 2],
    4: [7, 3, 1],
    5: [13, 6, 1],
    6: [5, 9+p, 8+p],
    7: [8+p, 3+p, 4],
    8: [7+p, 6+p, 10],
    9: [9+p, 12, 6+p],
    10: [8, 11, 0+p],
    11: [10, 12, 13+p],
    12: [9, 13, 11],
    13: [12, 5, 11+p]}


polys[j84] = {0: [3, 1, 11],
    11: [10, 0, 8],
    8: [7, 11, 2],
    2: [1, 5, 8],
    5: [4, 6, 2],
    6: [9, 7, 5],
    9: [10, 6, 3],
    4: [3, 5, 1],
    7: [6, 10, 8],
    10: [9, 11, 7],
    1: [0, 4, 2],
    3: [4, 0, 9]}
p=len(polys[j84])
nets[j84]={
    0: [3, 1, 11],
    1: [0, 4, 2],
    2: [1, 5, 8],
    3: [10+p, 0, 9],
    4: [11+p, 8+p, 1],
    5: [7+p, 9+p, 2],
    6: [10+p, 7, 9+p],
    7: [6, 5+p, 8],
    8: [7, 4+p, 2],
    9: [6+p, 5+p, 3],
    10: [6+p, 11, 3+p],
    11: [10, 0, 4+p]}
